% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/logreg_xerrors3.R
\name{logreg_xerrors3}
\alias{logreg_xerrors3}
\title{Logistic Regression with Lognormal Exposure Subject to Multiplicative
Lognormal Errors}
\usage{
logreg_xerrors3(y, xtilde, c = NULL, prev = NULL, samp_y1y0 = NULL,
  merror = TRUE, integrate_tol = 1e-08,
  integrate_tol_hessian = integrate_tol, estimate_var = FALSE, ...)
}
\arguments{
\item{y}{Numeric vector of Y values.}

\item{xtilde}{List of numeric vectors with Xtilde values.}

\item{c}{Numeric matrix with \strong{C} values (if any), with one row for
each subject. Can be a vector if there is only 1 covariate.}

\item{prev}{Numeric value specifying disease prevalence, allowing for valid
estimation of the intercept with case-control sampling. Can specify
\code{samp_y1y0} instead if sampling rates are known.}

\item{samp_y1y0}{Numeric vector of length 2 specifying sampling probabilities
for cases and controls, allowing for valid estimation of the intercept with
case-control sampling. Can specify \code{prev} instead if it's easier.}

\item{merror}{Logical value for whether there is measurement error.}

\item{integrate_tol}{Numeric value specifying \code{tol} input to
\code{\link[cubature]{hcubature}} for numerical integration.}

\item{integrate_tol_hessian}{Same as \code{integrate_tol}, but for use when
estimating the Hessian matrix only. Sometimes using a smaller value than for
likelihood maximization helps prevent cases where the inverse Hessian is not
positive definite.}

\item{estimate_var}{Logical value for whether to return variance-covariance
matrix for parameter estimates.}

\item{...}{Additional arguments to pass to \code{\link[stats]{nlminb}}.}
}
\description{
Assumes exposure measurements are subject to multiplicative mean-1 lognormal
measurement errors, and exposure given covariates is a log-transformed linear
regression. Some replicates are required for identifiability. Parameters are
estimated using maximum likelihood.
}
\details{
Disease model is:

logit[P(Y = 1|X, \strong{C})] = beta_0 + beta_x X + \strong{beta_c}^T
\strong{C}

Measurement error model is:

Xtilde|X ~ LN(-1/2 sigsq_m, sigsq_m)

Exposure model is:

X|\strong{C} ~ Lognormal(alpha_0 + \strong{alpha_c}^T \strong{C}, sigsq_x.c)
}
\examples{
# Load data frame with (Y, X, Xtilde, C) values for 500 subjects and list of
# Xtilde values where 25 subjects have replicates. Xtilde values are affected
# by measurement error. True parameter values are beta_0 = -0.5 beta_x = 0.2,
# beta_c = 0.1, sigsq_m = 0.5.
data(dat_logreg_xerrors3)
dat <- dat_logreg_xerrors3$dat
reps <- dat_logreg_xerrors3$reps

# Logistic regression of Y vs. (X, C) (unobservable truth).
fit.unobservable <- glm(y ~ x + c, data = dat, family = "binomial")
fit.unobservable$coef

# Logistic regression of Y vs. (Xtilde, C) ignoring measurement error.
fit.naive <- glm(y ~ xtilde + c, data = dat, family = "binomial")
fit.naive$theta.hat

# Logistic regression of Y vs. (Xtilde, C), accounting for measurement error.
# Takes a few minutes due to numerical integration.
\dontrun{
fit.corrected <- logreg_xerrors3(
  y = dat$y,
  xtilde = reps,
  c = dat$c,
  merror = TRUE,
  integrate_tol = 1e-4,
  control = list(trace = 1)
)
fit.corrected$theta.hat
}


}
